name: CI
on:
  pull_request:
  push:
    branches:
      - main
  schedule:
    - cron: '0 0 * * *' # Daily “At 00:00”
  workflow_dispatch:

jobs:

#  test:
#    # if: |
#    #   github.repository == 'NCAR/geocat-viz'
#    name: Python (${{ matrix.python-version }}, ${{ matrix.os }})
#    runs-on: ${{ matrix.os }}
#    defaults:
#      run:
#        shell: bash -l {0}
#
#    strategy:
#      fail-fast: false
#      matrix:
#        os: [ "ubuntu-latest", "macos-latest"]
#        python-version: [ "3.9", "3.10" ]
#    steps:
#      - name: Cancel previous runs
#        uses: styfle/cancel-workflow-action@0.11.0
#        with:
#          access_token: ${{ github.token }}
#      - name: checkout
#        uses: actions/checkout@v3
#        with:
#          token: ${{ github.token }}
#      - name: conda_setup
#        uses: conda-incubator/setup-miniconda@v2
#        with:
#          activate-environment: geocat_viz_build
#          channel-priority: strict
#          python-version: ${{ matrix.python-version }}
#          channels: conda-forge
#          environment-file: ci/environment.yml
#
#      - name: Install geocat-comp
#        run: |
#          python -m pip install . --no-deps
#
#      - name: conda list
#        run: |
#          conda list
#
#      - name: Run Namespace Tests
#        run: |
#          python -m pytest test
#
#      - name: Run Coverage Tests
#        run: |
#          python -m pytest test -v --cov=./src/geocat/comp --cov-report=xml
#
#      - name: Upload code coverage to Codecov
#        uses: codecov/codecov-action@v3.1.1
#        with:
#          file: ./coverage.xml
#          flags: unittests
#          env_vars: OS,PYTHON
#          name: codecov-umbrella
#          fail_ci_if_error: false

  docs:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          token: ${{ github.token }}
      - name: conda_setup
        uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: gv-docs
          channel-priority: strict
          python-version: "3.10"
          channels: conda-forge
          environment-file: ci/docs.yml
      - name: Make docs
        run: |
          cd docs
          make html
